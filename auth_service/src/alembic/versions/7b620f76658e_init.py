"""init

Revision ID: 7b620f76658e
Revises:
Create Date: 2025-08-29 14:13:27.185463

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from models.pg_models.base import Schemas

# revision identifiers, used by Alembic.
revision: str = "7b620f76658e"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"""CREATE SCHEMA IF NOT EXISTS {Schemas.users.value};""")
    op.execute(f"""CREATE SCHEMA IF NOT EXISTS {Schemas.employees.value};""")

    op.create_table(
        "employees",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("email_enc", sa.String(), nullable=False),
        sa.Column("email_hash", sa.String(), nullable=False),
        sa.Column("is_staff", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email_hash"),
        sa.UniqueConstraint("username"),
        schema="employees",
    )
    op.create_table(
        "users",
        sa.Column("nickname", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("email_enc", sa.String(), nullable=False),
        sa.Column("email_hash", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,  # noqa: E501
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,  # noqa: E501
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email_hash"),
        sa.UniqueConstraint("nickname"),
        schema="users",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users", schema="users")
    op.drop_table("employees", schema="employees")

    op.execute(f"""DROP SCHEMA IF EXISTS {Schemas.users.value};""")
    op.execute(f"""DROP SCHEMA IF EXISTS {Schemas.employees.value};""")
    # ### end Alembic commands ###
